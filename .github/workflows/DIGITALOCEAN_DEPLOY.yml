name: DIGITALOCEAN_DEPLOY

on:
  push:
    branches: [main]

jobs:
  build_npm_packages:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./wp-content/plugins/denhaag-wordpress-plugin

    steps:
      - name: Clean the workspace
        uses: docker://alpine
        with:
          args: /bin/sh -c "rm -rf /github/workspace/.* ||  rm -rf /github/workspace/*"
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: ./wp-content/plugins/denhaag-wordpress-plugin/package-lock.json
      - name: Install dependencies
        run: npm set registry=https://registry.npmjs.org/ && npm install
      - name: Build denhaag wordpress plugin
        run: npm run build

  Build:
    runs-on: self-hosted
    needs: build_npm_packages
    steps:
      - name: Clean the workspace
        uses: docker://alpine
        with:
          args: /bin/sh -c "rm -rf /github/workspace/.* || rm -rf /github/workspace/*"
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - name: "Create env file"
        run: |
          touch .env
          echo PHP_MY_ADMIN_PORT=${{ secrets.PHP_MY_ADMIN_PORT }} >> .env
          echo WORDPRESS_PORT=${{ secrets.WORDPRESS_PORT }} >> .env
          echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> .env
          echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> .env
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
          echo WORDPRESS_DB_HOST=${{ secrets.WORDPRESS_DB_HOST }} >> .env
          echo WORDPRESS_DB_USER=${{ secrets.WORDPRESS_DB_USER }} >> .env
          echo WORDPRESS_DB_PASSWORD=${{ secrets.WORDPRESS_DB_PASSWORD }} >> .env
          cat .env

      - name: Docker build
        run: docker-compose build
      - name: Docker down
        run: docker-compose down
      - name: Start server
        run: docker-compose up -d
