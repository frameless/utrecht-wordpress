name: DIGITALOCEAN_DEPLOY

on:
  push:
    branches: [main]

jobs:
  clean_workspace:
    runs-on: self-hosted
    steps:
      - name: Clean the workspace
        uses: docker://alpine
        with:
          args: /bin/sh -c "rm -rf /github/workspace/* /github/workspace/.* || true 2>/dev/null"
      - name: Work Space Init
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
  build_npm_packages:
    runs-on: self-hosted
    needs: clean_workspace
    defaults:
      run:
        working-directory: ./wp-content/plugins/denhaag-wordpress-plugin

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: ./wp-content/plugins/denhaag-wordpress-plugin/package-lock.json
      - name: Install dependencies
        run: npm set registry=https://registry.npmjs.org/ && npm install
      - name: Build denhaag wordpress plugin
        run: npm run build
  install_pdc_samenwerkende_catalogi:
    runs-on: self-hosted
    needs: clean_workspace
    steps:
      - uses: docker://composer:2
        with:
          args: /bin/sh -c "cd ./wp-content/plugins/pdc-samenwerkende-catalogi && composer install"

  install_pdc_base_master:
    runs-on: self-hosted
    needs: clean_workspace
    steps:
      - uses: docker://composer:2
        with:
          args: /bin/sh -c "cd ./wp-content/plugins/pdc-base && composer install"

  install_pdc_faq:
    runs-on: self-hosted
    needs: clean_workspace
    steps:
      - uses: docker://composer:2
        with:
          args: /bin/sh -c "cd ./wp-content/plugins/pdc-faq && composer install"

  install_pdc_leges:
    runs-on: self-hosted
    needs: clean_workspace
    steps:
      - uses: docker://composer:2
        with:
          args: /bin/sh -c "cd ./wp-content/plugins/pdc-leges && composer install"

  Build:
    runs-on: self-hosted
    needs:
      [
        build_npm_packages,
        install_pdc_base_master,
        install_pdc_samenwerkende_catalogi,
        install_pdc_leges,
        install_pdc_faq,
      ]
    steps:
      - name: "Create env file"
        run: |
          touch .env
          echo PHP_MY_ADMIN_PORT=${{ secrets.PHP_MY_ADMIN_PORT }} >> .env
          echo WORDPRESS_PORT=${{ secrets.WORDPRESS_PORT }} >> .env
          echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> .env
          echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> .env
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
          echo WORDPRESS_DB_HOST=${{ secrets.WORDPRESS_DB_HOST }} >> .env
          echo WORDPRESS_DB_USER=${{ secrets.WORDPRESS_DB_USER }} >> .env
          echo WORDPRESS_DB_PASSWORD=${{ secrets.WORDPRESS_DB_PASSWORD }} >> .env
          cat .env

      - name: Docker build
        run: docker-compose build
      - name: Docker down
        run: docker-compose down
      - name: Start server
        run: docker-compose up -d
